package mitatuliostettua.test;
// Generated by ComTest BEGIN
import mitatuliostettua.SailoException;
import java.util.ArrayList;
import java.util.List;
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import mitatuliostettua.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.25 21:39:16 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class MitatuliostettuaTest {

private Object annaKauppareissu(int i) {
    // TODO Auto-generated method stub
    return null;
}



  // Generated by ComTest BEGIN
  /** testGetMaara27 */
  @Test
  public void testGetMaara27() {    // Mitatuliostettua: 27
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    try {
    mitatuliostettua.lisaa(eka); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    eka.rekisteroi(); 
    eka.annaTiedot("20.03.2020"); 
    kauppareissut.lisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 40", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa71 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa71() throws SailoException {    // Mitatuliostettua: 71
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissu eka = new Kauppareissu(); 
    Kauppareissu toka = new Kauppareissu(); 
    assertEquals("From: Mitatuliostettua line: 76", 0, mitatuliostettua.getMaara()); 
    mitatuliostettua.lisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 78", 1, mitatuliostettua.getMaara()); 
    mitatuliostettua.lisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 80", 2, mitatuliostettua.getMaara()); 
    assertEquals("From: Mitatuliostettua line: 81", eka, mitatuliostettua.annaKauppareissu(0)); 
    assertEquals("From: Mitatuliostettua line: 82", toka, mitatuliostettua.annaKauppareissu(1)); 
    try {
    assertEquals("From: Mitatuliostettua line: 83", toka, mitatuliostettua.annaKauppareissu(2)); 
    fail("Mitatuliostettua: 83 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa96 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa96() throws SailoException {    // Mitatuliostettua: 96
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    kauppareissut.lisaa(eka); 
    mitatuliostettua.korvaaTaiLisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 103", 1, mitatuliostettua.getMaara()); 
    Kauppareissu toka = new Kauppareissu(); 
    kauppareissut.lisaa(toka); 
    mitatuliostettua.korvaaTaiLisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 107", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa119 */
  @Test
  public void testLisaa119() {    // Mitatuliostettua: 119
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Tuoteryhmat tuoteryhmat = new Tuoteryhmat(); 
    Tuoteryhma eka = new Tuoteryhma(); 
    Tuoteryhma toka = new Tuoteryhma(); 
    mitatuliostettua.lisaa(eka); 
    Tuoteryhma[] alkiot = new Tuoteryhma[20]; 
    alkiot[0] = eka; 
    alkiot[1] = toka; 
    mitatuliostettua.lisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 129", alkiot, mitatuliostettua.getTuoteryhmat()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaOsto139 */
  @Test
  public void testLisaaOsto139() {    // Mitatuliostettua: 139
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Ostot ostot = new Ostot(); 
    Osto eka = new Osto(); 
    Osto toka = new Osto(); 
    mitatuliostettua.lisaaOsto(eka); 
    List<Osto> loydetyt = new ArrayList<Osto>(); 
    loydetyt.add(eka); 
    loydetyt.add(toka); 
    mitatuliostettua.lisaaOsto(toka); 
    assertEquals("From: Mitatuliostettua line: 151", loydetyt, mitatuliostettua.annaKaikkiOstot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKaikkiOstot161 */
  @Test
  public void testAnnaKaikkiOstot161() {    // Mitatuliostettua: 161
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Ostot ostot = new Ostot(); 
    Osto eka = new Osto(); 
    Osto toka = new Osto(); 
    mitatuliostettua.lisaaOsto(eka); 
    List<Osto> loydetyt = new ArrayList<Osto>(); 
    loydetyt.add(eka); 
    loydetyt.add(toka); 
    mitatuliostettua.lisaaOsto(toka); 
    assertEquals("From: Mitatuliostettua line: 173", loydetyt, mitatuliostettua.annaKaikkiOstot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaOstot187 */
  @Test
  public void testAnnaOstot187() {    // Mitatuliostettua: 187
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    kauppareissut.lisaa(eka); 
    Ostot ostot = new Ostot(); 
    Osto ekao = new Osto(); 
    Osto tokao = new Osto(); 
    mitatuliostettua.lisaaOsto(ekao); 
    mitatuliostettua.lisaaOsto(tokao); 
    ekao.annaTiedot(eka.getTunnus(), "joku"); 
    tokao.annaTiedot(eka.getTunnus(), "jaku"); 
    List<Osto> ostot3 = new ArrayList<Osto>(); 
    ostot3.add(ekao); 
    ostot3.add(tokao); 
    List<Osto> ostot2 = ostot.annaOstot(1); 
    assertEquals("From: Mitatuliostettua line: 203", ostot3, ostot2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKauppareissu217 */
  @Test
  public void testAnnaKauppareissu217() {    // Mitatuliostettua: 217
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    kauppareissut.lisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 221", eka, annaKauppareissu(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta248 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta248() throws SailoException {    // Mitatuliostettua: 248
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissu eka = new Kauppareissu(); 
    Kauppareissu toka = new Kauppareissu(); 
    Osto osto1 = new Osto(); osto1.annaTiedot(eka.getTunnus()); 
    Osto osto2 = new Osto(); osto2.annaTiedot(toka.getTunnus()); 
    Osto osto3 = new Osto(); osto3.annaTiedot(eka.getTunnus()); 
    Osto osto4 = new Osto(); osto4.annaTiedot(toka.getTunnus()); 
    String hakemisto = "lukutesti"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/kauppareissut.dat"); 
    File fhtied = new File(hakemisto+"/ostot.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    mitatuliostettua.lueTiedostosta(hakemisto); 
    fail("Mitatuliostettua: 268 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    mitatuliostettua.lisaa(eka); 
    mitatuliostettua.lisaa(toka); 
    mitatuliostettua.lisaaOsto(osto1); 
    mitatuliostettua.lisaaOsto(osto2); 
    mitatuliostettua.lisaaOsto(osto3); 
    mitatuliostettua.lisaaOsto(osto4); 
    mitatuliostettua.talleta(); 
    mitatuliostettua = new Mitatuliostettua(); 
    mitatuliostettua.lueTiedostosta(hakemisto); 
    List<Osto> loydetyt = new ArrayList<Osto>(); 
    loydetyt.add(osto1); 
    loydetyt.add(osto2); 
    loydetyt.add(osto3); 
    loydetyt.add(osto4); 
    assertEquals("From: Mitatuliostettua line: 283", loydetyt, mitatuliostettua.annaKaikkiOstot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista377 
   * @throws SailoException when error
   */
  @Test
  public void testPoista377() throws SailoException {    // Mitatuliostettua: 377
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    Kauppareissu toka = new Kauppareissu(); 
    eka.rekisteroi(); 
    toka.rekisteroi(); 
    mitatuliostettua.lisaa(eka); 
    mitatuliostettua.lisaa(toka); 
    mitatuliostettua.poista(eka); 
    assertEquals("From: Mitatuliostettua line: 388", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLaskeHinta417 
   * @throws SailoException when error
   */
  @Test
  public void testLaskeHinta417() throws SailoException {    // Mitatuliostettua: 417
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    eka.rekisteroi(); 
    mitatuliostettua.lisaa(eka); 
    Osto osto = new Osto(); 
    osto.annaTiedot(eka.getTunnus(), "tuote", 3, 5); 
    Osto osto2 = new Osto(); 
    osto2.annaTiedot(eka.getTunnus(), "tuote2", 6, 7); 
    mitatuliostettua.lisaaOsto(osto); 
    mitatuliostettua.lisaaOsto(osto2); 
    assertEquals("From: Mitatuliostettua line: 430", 12, mitatuliostettua.LaskeHinta(eka.getTunnus())); 
  } // Generated by ComTest END
}