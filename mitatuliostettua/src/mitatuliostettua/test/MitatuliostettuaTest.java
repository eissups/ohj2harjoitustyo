package mitatuliostettua.test;
// Generated by ComTest BEGIN
import mitatuliostettua.SailoException;
import java.util.ArrayList;
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import mitatuliostettua.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.26 00:48:32 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class MitatuliostettuaTest {



  // Generated by ComTest BEGIN
  /** testGetMaara25 */
  @Test
  public void testGetMaara25() {    // Mitatuliostettua: 25
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    try {
    mitatuliostettua.lisaa(eka); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    eka.rekisteroi(); 
    eka.annaTiedot("20.03.2020"); 
    kauppareissut.lisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 38", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa69 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa69() throws SailoException {    // Mitatuliostettua: 69
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissu eka = new Kauppareissu(); 
    Kauppareissu toka = new Kauppareissu(); 
    assertEquals("From: Mitatuliostettua line: 74", 0, mitatuliostettua.getMaara()); 
    mitatuliostettua.lisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 76", 1, mitatuliostettua.getMaara()); 
    mitatuliostettua.lisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 78", 2, mitatuliostettua.getMaara()); 
    assertEquals("From: Mitatuliostettua line: 79", eka, mitatuliostettua.annaKauppareissu(0)); 
    assertEquals("From: Mitatuliostettua line: 80", toka, mitatuliostettua.annaKauppareissu(1)); 
    try {
    assertEquals("From: Mitatuliostettua line: 81", toka, mitatuliostettua.annaKauppareissu(2)); 
    fail("Mitatuliostettua: 81 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa94 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa94() throws SailoException {    // Mitatuliostettua: 94
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    kauppareissut.lisaa(eka); 
    mitatuliostettua.korvaaTaiLisaa(eka); 
    assertEquals("From: Mitatuliostettua line: 101", 1, mitatuliostettua.getMaara()); 
    Kauppareissu toka = new Kauppareissu(); 
    kauppareissut.lisaa(toka); 
    mitatuliostettua.korvaaTaiLisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 105", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa117 */
  @Test
  public void testLisaa117() {    // Mitatuliostettua: 117
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Tuoteryhma eka = new Tuoteryhma(); 
    Tuoteryhma toka = new Tuoteryhma(); 
    mitatuliostettua.lisaa(eka); 
    Tuoteryhma[] alkiot = new Tuoteryhma[20]; 
    alkiot[0] = eka; 
    alkiot[1] = toka; 
    mitatuliostettua.lisaa(toka); 
    assertEquals("From: Mitatuliostettua line: 126", alkiot, mitatuliostettua.getTuoteryhmat()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaOsto136 */
  @Test
  public void testLisaaOsto136() {    // Mitatuliostettua: 136
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Osto eka = new Osto(); 
    Osto toka = new Osto(); 
    mitatuliostettua.lisaaOsto(eka); 
    List<Osto> loydetyt = new ArrayList<Osto>(); 
    loydetyt.add(eka); 
    loydetyt.add(toka); 
    mitatuliostettua.lisaaOsto(toka); 
    assertEquals("From: Mitatuliostettua line: 147", loydetyt, mitatuliostettua.annaKaikkiOstot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKaikkiOstot157 */
  @Test
  public void testAnnaKaikkiOstot157() {    // Mitatuliostettua: 157
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Osto eka = new Osto(); 
    Osto toka = new Osto(); 
    mitatuliostettua.lisaaOsto(eka); 
    List<Osto> loydetyt = new ArrayList<Osto>(); 
    loydetyt.add(eka); 
    loydetyt.add(toka); 
    mitatuliostettua.lisaaOsto(toka); 
    assertEquals("From: Mitatuliostettua line: 168", loydetyt, mitatuliostettua.annaKaikkiOstot()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista307 
   * @throws SailoException when error
   */
  @Test
  public void testPoista307() throws SailoException {    // Mitatuliostettua: 307
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissu eka = new Kauppareissu(); 
    Kauppareissu toka = new Kauppareissu(); 
    eka.rekisteroi(); 
    toka.rekisteroi(); 
    mitatuliostettua.lisaa(eka); 
    mitatuliostettua.lisaa(toka); 
    mitatuliostettua.poista(eka); 
    assertEquals("From: Mitatuliostettua line: 317", 1, mitatuliostettua.getMaara()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLaskeHinta346 
   * @throws SailoException when error
   */
  @Test
  public void testLaskeHinta346() throws SailoException {    // Mitatuliostettua: 346
    Mitatuliostettua mitatuliostettua = new Mitatuliostettua(); 
    Kauppareissu eka = new Kauppareissu(); 
    eka.rekisteroi(); 
    mitatuliostettua.lisaa(eka); 
    Osto osto = new Osto(); 
    osto.annaTiedot(eka.getTunnus(), "tuote", 3, 5); 
    Osto osto2 = new Osto(); 
    osto2.annaTiedot(eka.getTunnus(), "tuote2", 6, 7); 
    mitatuliostettua.lisaaOsto(osto); 
    mitatuliostettua.lisaaOsto(osto2); 
    assertEquals("From: Mitatuliostettua line: 358", 12, mitatuliostettua.LaskeHinta(eka.getTunnus())); 
  } // Generated by ComTest END
}