package mitatuliostettua.test;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.Iterator;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import mitatuliostettua.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.30 16:35:47 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class OstotTest {



  // Generated by ComTest BEGIN
  /** testLisaa73 */
  @Test
  public void testLisaa73() {    // Ostot: 73
    Ostot ostot = new Ostot(); 
    Osto eka = new Osto(); 
    ostot.lisaa(eka); 
    assertEquals("From: Ostot line: 77", 1, ostot.getLkm()); 
    Osto toka = new Osto(); 
    ostot.lisaa(toka); 
    assertEquals("From: Ostot line: 80", 2, ostot.getLkm()); 
    Osto juu = new Osto(); 
    ostot.lisaa(juu); 
    assertEquals("From: Ostot line: 83", 3, ostot.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta1101 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta1101() throws SailoException {    // Ostot: 101
    Tuoteryhmat tuoteryhmat = new Tuoteryhmat(); 
    Tuoteryhma ruoka = new Tuoteryhma(); 
    ruoka.rekisteroi(); 
    ruoka.annaTiedot("jii"); 
    tuoteryhmat.lisaa(ruoka); 
    Ostot ostot = new Ostot(); 
    Osto osto1 = new Osto(), osto2 = new Osto(); 
    osto1.rekisteroi(); 
    osto2.rekisteroi(); 
    osto1.annaTiedot(1, "tuote1", 2,  10); 
    osto2.annaTiedot(2, "tuote2", 3, 6); 
    String hakemisto = "testiostot"; 
    String tiedNimi = hakemisto+"/ostot"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    ostot.lueTiedostosta(tuoteryhmat, tiedNimi); 
    ostot.lisaa(osto1); 
    ostot.lisaa(osto2); 
    ostot.tallennaOsto(); 
    ostot = new Ostot();  // Poistetaan vanhat luomalla uusi
    ostot.lueTiedostosta1(tuoteryhmat, tiedNimi );  // johon ladataan tiedot tiedostosta.
    Iterator<Osto> i = ostot.iterator(); 
    assertEquals("From: Ostot line: 129", osto1.toString(), i.next().toString()); 
    assertEquals("From: Ostot line: 130", osto2.toString(), i.next().toString()); 
    ostot.lisaa(osto2); 
    assertEquals("From: Ostot line: 132", false, ftied.delete()); 
    assertEquals("From: Ostot line: 133", false, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLkm246 */
  @Test
  public void testGetLkm246() {    // Ostot: 246
    Ostot ostot = new Ostot(); 
    Osto osto = new Osto(); 
    Osto esto = new Osto(); 
    osto.rekisteroi(); 
    esto.rekisteroi(); 
    ostot.lisaa(osto); 
    ostot.lisaa(esto); 
    assertEquals("From: Ostot line: 254", 2, ostot.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaOstot268 */
  @Test
  public void testAnnaOstot268() {    // Ostot: 268
    Ostot ostot = new Ostot(); 
    Osto eka = new Osto(2); ostot.lisaa(eka); 
    Osto toka = new Osto(1); ostot.lisaa(toka); 
    Osto kolmas = new Osto(2); ostot.lisaa(kolmas); 
    Osto neljas = new Osto(1); ostot.lisaa(neljas); 
    Osto viides = new Osto(2); ostot.lisaa(viides); 
    Osto kuudes = new Osto(5); ostot.lisaa(kuudes); 
    List<Osto> loytyneet; 
    loytyneet = ostot.annaOstot(3); 
    assertEquals("From: Ostot line: 281", 0, loytyneet.size()); 
    loytyneet = ostot.annaOstot(1); 
    assertEquals("From: Ostot line: 283", 2, loytyneet.size()); 
    assertEquals("From: Ostot line: 284", true, loytyneet.get(0) == toka); 
    assertEquals("From: Ostot line: 285", true, loytyneet.get(1) == neljas); 
    loytyneet = ostot.annaOstot(5); 
    assertEquals("From: Ostot line: 287", 1, loytyneet.size()); 
    assertEquals("From: Ostot line: 288", true, loytyneet.get(0) == kuudes); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLaskeHinta363 */
  @Test
  public void testLaskeHinta363() {    // Ostot: 363
    Kauppareissut kauppareissut = new Kauppareissut(); 
    Kauppareissu eka = new Kauppareissu(); 
    eka.rekisteroi(); 
    kauppareissut.lisaa(eka); 
    Osto osto = new Osto(); 
    Ostot ostot = new Ostot(); 
    osto.annaTiedot(eka.getTunnus(), "tuote", 3, 5); 
    Osto osto2 = new Osto(); 
    osto2.annaTiedot(eka.getTunnus(), "tuote2", 6, 7); 
    ostot.lisaa(osto); 
    ostot.lisaa(osto2); 
    assertEquals("From: Ostot line: 375", 12, ostot.laskeHinta(eka.getTunnus())); 
  } // Generated by ComTest END
}